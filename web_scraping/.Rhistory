# shape for the 6 different states
colStates <- map("state", fill = TRUE,
plot = FALSE,
region = c("florida", "louisiana", "mississippi",
"alabama", "georgia", "tennesse"))
# Adding layers: add polygons
leaflet_andrew <- leaflet_andrew %>%
addPolygons(data=colStates,
fillColor = heat.colors(6, alpha = 1),
stroke = FALSE)
leaflet_andrew
leaflet_andrew <- leaflet_andrew %>%
addPolygons(data=colStates,
fillColor = heat.colors(6, alpha = 1),
stroke = TRUE)
leaflet_andrew
leaflet_andrew <- leaflet_andrew %>%
addPolygons(data=colStates,
fillColor = heat.colors(6, alpha = 1),
stroke = FALSE)
leaflet_andrew
if(!require('devtools')) install.packages('devtools')
devtools::install_github('rstudio/leaflet')
runApp('~/Desktop/nyc-data-science/Jumpstarts/leaflet_shiny_demo')
health <- read.csv("health_processed.csv")
health <- health %>%
mutate(date = as.Date(date,"%Y-%m-%d"))
library(ggplot2)
library(dplyr)
library(scales)
library(lubridate)
health <- health %>%
mutate(date = as.Date(date,"%Y-%m-%d"))
health$year = year(health$date)
health$month = month(health$date)
health$day = day(health$date)
health$grade <- relevel(health$grade,ref="B")
health$grade <- relevel(health$grade,ref='C')
test2  = health %>%
filter(year=='2016')%>%
group_by(restaurant,building,street,zipcode)%>%
arrange(desc(date)) %>%
top_n(1,wt=date)
g <- ggplot(data = test2, aes(x = borough, fill = factor(grade)))
g + geom_bar(position = "fill",aes(fill=grade))+ylab("%")
raw <- read.csv("health_inspection.csv")
raw <- read.csv("health_inspection.csv")
raw <- read.csv("health_inspection.csv")
data <- raw
names(data) <- tolower(names(data))
data <- data[!(is.na(data$score)),]
data <- data %>% filter(score >= 0)
data <- data %>%
mutate(restaurant = tolower(dba))%>%
rename(borough = boro)%>%
rename(cuisine = cuisine.description)%>%
#Change format of date
mutate(date = as.Date(inspection.date,"%m/%d/%Y"))%>%
# Shorten Cuisine Type
mutate(cuisine = gsub(pattern = 'Latin \\(Cuban, Dominican, Puerto Rican, South \\& Central American\\)', replacement = 'Latin', x = cuisine, ignore.case = F)) %>%
mutate(cuisine = gsub(pattern = 'CafÃ©/Coffee/Tea', replacement = 'Cafe/Coffee/Tea', x = cuisine, ignore.case = F))
data$action <- factor(data$action)
levels(data$action) = c("closed","reclosed","reopened","no violations","violations")
data$grade =  cut(data$score, c(0,13,27,131),
labels = c('A','B','C'),
include.lowest = TRUE)
levels(data$borough) = c("Bronx","Brooklyn","Manhattan","Manhattan","Queens", "Staten Island")
data <- data %>%
select(-camis, -dba,-phone,-inspection.date,-grade.date,
-record.date,-violation.code)
write.csv(data, file = "health_processed.csv",row.names=FALSE)
health <- read.csv("health_processed.csv")
health <- health %>%
mutate(date = as.Date(date,"%Y-%m-%d"))
health$year = year(health$date)
health$month = month(health$date)
health$day = day(health$date)
health$grade <- relevel(health$grade,ref="B")
health$grade <- relevel(health$grade,ref='C')
test2  = health %>%
filter(year=='2016')%>%
group_by(restaurant,building,street,zipcode)%>%
arrange(desc(date)) %>%
top_n(1,wt=date)
g <- ggplot(data = test2, aes(x = borough, fill = factor(grade)))
g + geom_bar(position = "fill",aes(fill=grade))+ylab("%")
by_cuisine = health %>%
group_by(cuisine)%>%
summarise(n=n())%>%
top_n(20,wt=n)
by_cuisine
by_cuisine$cuisine
filter(health,by_cuisine$cuisine)
health[health$cuisine==by_cuisine$cuisine,]
unique(by_cuisine$cuisine)
subset(health,cuisine %in% by_cuisine)
by_cuisine = health %>%
group_by(cuisine)%>%
summarise(n=n())%>%
top_n(20,wt=n)
by_cuisine
subset(health,cuisine %in% by_cuisine4cuisine)
subset(health,cuisine %in% by_cuisine$cuisine)
top_20 = subset(health,cuisine %in% by_cuisine$cuisine)
top_20 %>% group_by(cuisinine)
top_20 %>% group_by(cuisine)
top_20 %>% group_by(cuisine) %>% summaize(n())
top_20 %>% group_by(cuisine) %>% summarize(n())
subset_top20 = subset(health,cuisine %in% by_cuisine$cuisine)
group_by(cuisine,borough)%>%
arrange(desc(date))%>%
top_n(1,wt=date)%>%
summarize(Avg_Score = mean(score))
subset_top20 = subset(health,cuisine %in% by_cuisine$cuisine)
test = subset_top20 %>%
filter(year == 2006)
test = subset_top20 %>%
filter(year == 2016)
group_by(cuisine,borough)%>%
arrange(desc(date))%>%
top_n(1,wt=date)%>%
summarize(Avg_Score = mean(score))
group_by(cuisine,borough,date)%>%
arrange(desc(date))%>%
top_n(1,wt=date)%>%
summarize(Avg_Score = mean(score))
subset_top20
str(subset_top20)
subset_top20 = subset(health,cuisine %in% top20_cuisine$cuisine)
top20_cuisine = health %>%
group_by(cuisine)%>%
summarise(n=n())%>%
top_n(20,wt=n)
subset_top20 = subset(health,cuisine %in% top20_cuisine$cuisine)
str(subset_top20)
str(top20_cuisine)
subset_top20$cuisine = factor(subset_top20$cuisine )
str(top20_cuisine)
levels(subset_top20$cuisine )
test = subset_top20 %>%
filter(year == 2016)
test = subset_top20 %>%
filter(year == 2016)%>%
group_by(cuisine,borough,date)%>%
arrange(desc(date))%>%
top_n(1,wt=date)%>%
summarize(Avg_Score = mean(score))
View(test)
latest_2016  = health %>%
filter(year=='2016')%>%
group_by(restaurant,building,street,zipcode)%>%
arrange(desc(date)) %>%
top_n(1,wt=date)
top20_cuisine = latest_2016 %>%
group_by(cuisine)%>%
summarise(n=n())%>%
top_n(20,wt=n)
subset_top20 = subset(latest_2016,cuisine %in% top20_cuisine$cuisine)
subset_top20$cuisine = factor(subset_top20$cuisine )
test = subset_top20 %>%
filter(year == 2016)%>%
group_by(cuisine,borough,date)%>%
arrange(desc(date))%>%
top_n(1,wt=date)%>%
summarize(Avg_Score = mean(score))
View(test)
test = subset_top20 %>%
filter(year == 2016)%>%
group_by(cuisine,borough)%>%
summarize(Avg_Score = mean(score))
View(test)
g1 <- ggplot(data = test, aes(x=borough, y=cuisine))
g1 +geom_bar(aes(fill = Avg_Score), position = "fill")
g1 +geom_vol(aes(fill = Avg_Score), position = "fill")
g1 +geom_col(aes(fill = Avg_Score), position = "fill")
g1 +geom_tile(aes(fill = Avg_Score))
test = subset_top20 %>%
filter(year == 2016)%>%
group_by(cuisine,borough)%>%
summarize(Avg_Score = mean(score), n= n())
g1 <- ggplot(data = test, aes(x=borough, y=cuisine))
g1 +geom_tile(aes(fill = Avg_Score))
View(test)
library(RColorBrewer)
g1 +geom_tile(aes(fill = Avg_Score))+
scale_colour_gradient(low="red")
g1 +geom_tile(aes(fill = Avg_Score))+
scale_colour_continuous(low="red")
g1 +geom_tile(aes(fill = Avg_Score))+
scale_colour_gradient(low="green",high="red")
g1 +geom_tile(aes(fill = Avg_Score))+
scale_colour_gradient(guide = "colourbar", low="green",high="red")
g1 <- g1 +geom_tile(aes(fill = Avg_Score))
g1
g1 + scale_colour_gradient(low="green",high="red")
g1 <- g1 +geom_tile(aes(color = Avg_Score))
g1
g1 <- g1 +geom_tile(aes(fill = Avg_Score))
g1
g1 + scale_fill_gradient(low="green",high="red")
g1 <- ggplot(data = test, aes(x=borough, y=cuisine, fill = Avg_Score))
g1 <- g1 +geom_tile()
g1 + scale_fill_gradient(low="green",high="red")
top20_violations = latest_2016 %>%
group_by(violation)%>%
summarise(n=n())%>%
top_n(20,wt=n)
top20_violations = latest_2016 %>%
group_by(violation.description)%>%
summarise(n=n())%>%
top_n(20,wt=n)
View(top20_violations)
subset_top20 = subset(latest_2016,violation.description %in%
top20_violations$violation.description)
subset_top20$violatiion.description =
factor(subset_top20$violation.description )
test = subset_top20 %>%
filter(year == 2016)%>%
group_by(violation.description,borough)%>%
summarize(Avg_Score = mean(score), n= n())
g1 <- ggplot(data = test, aes(x=borough, y=violation.description, fill = Avg_Score))
g1 <- g1 +geom_tile()
g1 + scale_fill_gradient(low="green",high="red")
View(test)
g1 + scale_fill_gradient(low="green",high="red")+xlab("")
latest_2016  = health %>%
filter(year=='2016')%>%
group_by(restaurant,building,street,zipcode)%>%
arrange(desc(date)) %>%
top_n(1,wt=date)
top20_cuisine = latest_2016 %>%
group_by(cuisine)%>%
summarise(n=n())%>%
top_n(20,wt=n)
subset_top20 = subset(latest_2016,cuisine %in% top20_cuisine$cuisine)
subset_top20$cuisine = factor(subset_top20$cuisine )
test = subset_top20 %>%
filter(year == 2016)%>%
group_by(cuisine,borough)%>%
summarize(Avg_Score = mean(score), n= n())
g1 <- ggplot(data = test, aes(x=borough, y=cuisine, fill = Avg_Score))
g1 <- g1 +geom_tile()
g1 + scale_fill_gradient(low="green",high="red")
View(latest_2016)
critical = latest_2016 %>%
group_by(critical.flag)%>%
summarise((n=n()))
critical = latest_2016 %>%
group_by(critical.flag)%>%
summarise((n=n()))
critical = latest_2016 %>%
group_by(critical.flag)%>%
summarise(n=n())
View(critical)
View(health)
health <- read.csv("health_processed.csv")
health <- read.csv("health_processed.csv")
View(health)
filter(health, grade =='A', critical.flag == 'Critical')
critical  =  health %>%
group_by(critical.flag)%>%
summarise(n = n())
critical
critical$percentage = critical$n/ sum(critical$n)
critical
library(ggplot2)
library(dplyr)
library(scales)
library(lubridate)
library(RColorBrewer)
library(scales)
critical$percentage = percent(critical$n/ sum(critical$n))
critical
shiny::runApp('~/Desktop/nyc-data-science/project-1/app')
source('app/globals.R')
source('~/Desktop/nyc-data-science/project-1/app/globals.R')
byyear_latest <- function(data, yr){
data %>%
filter(year==yr)%>%
group_by(restaurant,building,street,zipcode)%>%
arrange(desc(date)) %>%
top_n(1,wt=date)
}
byyear_latest(health,'2016')
health %>%
filter(year==yr)%>%
group_by(restaurant,building,street,zipcode)%>%
arrange(desc(date)) %>%
top_n(1,wt=date)
byyear_latest <- function(yr){
health %>%
filter(year==yr)%>%
group_by(restaurant,building,street,zipcode)%>%
arrange(desc(date)) %>%
top_n(1,wt=date)
}
byyear_latest('2016')
byyear_latest(2016)
latest_2016  = health %>%
filter(year=='2016')%>%
group_by(restaurant,building,street,zipcode)%>%
arrange(desc(date)) %>%
top_n(1,wt=date)
latest_2016  = health %>%
filter(year=='2016')%>%
group_by(restaurant,building,street,zipcode)%>%
arrange(desc(date)) %>%
top_n(1,wt=date)
latest_2016  = health %>%
filter(year =='2016')%>%
group_by(restaurant,building,street,zipcode)%>%
arrange(desc(date)) %>%
top_n(1,wt=date)
latest_2016  = health %>%
filter(year =='2016')%>%
group_by(restaurant,building,street,zipcode)%>%
arrange(desc(date)) %>%
top_n(1,wt=date)
library(ggplot2)
library(dplyr)
library(scales)
library(lubridate)
library(RColorBrewer)
library(scales)
latest_2016  = health %>%
filter(year =='2016')%>%
group_by(restaurant,building,street,zipcode)%>%
arrange(desc(date)) %>%
top_n(1,wt=date)
latest_2016 <- health %>%
filter(year =='2016')%>%
group_by(restaurant,building,street,zipcode)%>%
arrange(desc(date)) %>%
top_n(1,wt=date)
View(health)
health %>%
filter(year == 2016)%>%
group_by(restaurant,building,street,zipcode)%>%
arrange(desc(date)) %>%
top_n(1,wt=date)
latest_2016  = health %>%
filter(year=='2016')%>%
group_by(restaurant,building,street,zipcode)%>%
arrange(desc(date)) %>%
top_n(1,wt=date)
health <- read.csv("health_processed.csv")
critical  =  health %>%
group_by(critical.flag)%>%
summarise(n = n())
critical$percentage = percent(critical$n/ sum(critical$n))
latest_2016  = health %>%
filter(year=='2016')%>%
group_by(restaurant,building,street,zipcode)%>%
arrange(desc(date)) %>%
top_n(1,wt=date)
library(ggplot2)
library(dplyr)
library(scales)
library(lubridate)
library(RColorBrewer)
critical
health %>%
filter(year=='2016')
latest_2016  = health %>%
group_by(restaurant,building,street,zipcode)%>%
arrange(desc(date)) %>%
top_n(1,wt=date)
health$year = year(health$date)
health$month = month(health$date)
health$day = day(health$date)
health$grade <- relevel(health$grade,ref="B")
health$grade <- relevel(health$grade,ref='C')
health
View(health)
byyear_latest <- funtion(data,yr){
data %>%
filter(year==yr)%>%
group_by(restaurant,building,street,zipcode)%>%
arrange(desc(date)) %>%
top_n(1,wt=date)
}
byyear_latest <- funtion(data,yr){
data %>%
filter(year==yr)%>%
group_by(restaurant,building,street,zipcode)%>%
arrange(desc(date)) %>%
top_n(1,wt=date)
}
byyear_latest <- funtion(data,yr){
result <- data %>%
filter(year==yr)%>%
group_by(restaurant,building,street,zipcode)%>%
arrange(desc(date)) %>%
top_n(1,wt=date)
return (result)
}
byyear_latest <- funtion(data,yr){
result <- data %>%
filter(year==yr)%>%
group_by(restaurant,building,street,zipcode)%>%
arrange(desc(date)) %>%
top_n(1,wt=date)
return (result)
}
latest_2016  = health %>%
filter(year=='2016')%>%
group_by(restaurant,building,street,zipcode)%>%
arrange(desc(date)) %>%
top_n(1,wt=date)
g <- ggplot(latest_2016, aes(x=critical.flag))
g + geom_col(aes(fill = grade))
View(latest_2016)
str(latest_2016)
str(test2)
g <- ggplot(latest_2016, aes(x=critical.flag, fill = factor(grade)))
g + geom_bar(position = "fill")
health_2016_critical <- latest_2016 %>%
filter(critical.flag == 'Critical' )
write.csv(health_2016_critical, file = "health_2016_critical.csv",row.names=FALSE)
write.csv(health_2016, file = "health_critical.csv",row.names = FALSE)
health_critical <- health %>%
filter(critical.flag  == 'Critical')
write.csv(health_critical, file = "health_critical.csv",row.names = FALSE)
health_critical <- read.csv("health_critical.csv")
View(health_critical)
str(health_critical)
sum(unique(health$restaurant))
View(health_critical)
latest_2016  = health_critical %>%
filter(year=='2016')%>%
group_by(restaurant,building,street,zipcode)%>%
arrange(desc(date)) %>%
top_n(1,wt=date)
top20_cuisine = latest_2016 %>%
group_by(cuisine)%>%
summarise(n=n())%>%
top_n(20,wt=n)
subset_top20 = subset(latest_2016,cuisine %in% top20_cuisine$cuisine)
subset_top20$cuisine = factor(subset_top20$cuisine )
test = subset_top20 %>%
filter(year == 2016)%>%
group_by(cuisine,borough)%>%
summarize(Avg_Score = mean(score), n= n())
g1 <- ggplot(data = test, aes(x=borough, y=cuisine, fill = Avg_Score))
g1 <- g1 +geom_tile()
g1 + scale_fill_gradient(low="green",high="red")
data$year = year(data$date)
data$month = month(data$date)
data$day = day(data$date)
data$grade <- relevel(data$grade,ref="B")
data$grade <- relevel(data$grade,ref='C')
raw <- read.csv("health_inspection.csv")
data <- raw
names(data) <- tolower(names(data))
data <- data[!(is.na(data$score)),]
data <- data %>% filter(score >= 0)
data <- data %>%
mutate(restaurant = tolower(dba))%>%
rename(borough = boro)%>%
rename(cuisine = cuisine.description)%>%
#Change format of date
mutate(date = as.Date(inspection.date,"%m/%d/%Y"))%>%
# Shorten Cuisine Type
mutate(cuisine = gsub(pattern = 'Latin \\(Cuban, Dominican, Puerto Rican, South \\& Central American\\)', replacement = 'Latin', x = cuisine, ignore.case = F)) %>%
mutate(cuisine = gsub(pattern = 'CafÃ©/Coffee/Tea', replacement = 'Cafe/Coffee/Tea', x = cuisine, ignore.case = F))
data$action <- factor(data$action)
levels(data$action) = c("closed","reclosed","reopened","no violations","violations")
data$grade_converted =  cut(data$score, c(0,13,27,131),
labels = c('A','B','C'),
include.lowest = TRUE)
levels(data$borough) = c("Bronx","Brooklyn","Manhattan","Manhattan","Queens", "Staten Island")
data <- data %>%
select(-camis, -dba,-phone,-inspection.date,-grade.date,
-record.date,-violation.code)
data$year = year(data$date)
data$month = month(data$date)
data$day = day(data$date)
data$grade <- relevel(data$grade,ref="B")
data$grade <- relevel(data$grade,ref='C')
str(data)
shiny::runApp('~/Desktop/nyc-data-science/yvonnelau/app')
runApp('~/Desktop/bootcamp008_project/Project1-ExploreVis/yvonnelau/app')
?melt
runApp('~/Desktop/bootcamp008_project/Project1-ExploreVis/yvonnelau/app')
?cast
runApp('~/Desktop/bootcamp008_project/Project1-ExploreVis/yvonnelau/app')
runApp('~/Desktop/bootcamp008_project/Project1-ExploreVis/yvonnelau/app')
shiny::runApp('~/Desktop/bootcamp008_project/Project1-ExploreVis/yvonnelau/app')
load("~/Desktop/nyc-data-science/yvonnelau/app/data/health_processed.RData")
dim(health_processed)
View(health_processed)
dim(health_processed)
load("~/Desktop/nyc-data-science/yvonnelau/app/data/closure_shiny.RData")
closure_shiny
View(closure_shiny)
148+347+198+219+144+137+97
148+347+198+219+144+137+97+218
1290/1508
?geocode
??geocode
shiny::runApp('~/Desktop/bootcamp008_project/Project1-ExploreVis/yvonnelau/app')
setwd("~/Desktop/nyc-data-science/project-2/skincare")
read.table(skincare.txt,sep=' ')
read.table("skincare.txt",sep=' ')
read.table("skincare.txt")
read.table(file = "skincare.txt")
read.table(file = skincare.txt)
setwd("~/Desktop/nyc-data-science/project-2/skincare")
read.table(file = skincare.txt)
read.table
read.csv(skincare.txt,sep=" ")
read.csv(skincare.txt,sep="\t")
